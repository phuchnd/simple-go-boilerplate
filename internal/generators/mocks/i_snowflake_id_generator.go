// Code generated by mockery. DO NOT EDIT.

package mocks

import (
	generators "github.com/phuchnd/simple-go-boilerplate/internal/generators"
	mock "github.com/stretchr/testify/mock"
)

// ISnowflakeIDGenerator is an autogenerated mock type for the ISnowflakeIDGenerator type
type ISnowflakeIDGenerator struct {
	mock.Mock
}

// Next provides a mock function with given fields:
func (_m *ISnowflakeIDGenerator) Next() generators.SnowflakeID {
	ret := _m.Called()

	var r0 generators.SnowflakeID
	if rf, ok := ret.Get(0).(func() generators.SnowflakeID); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(generators.SnowflakeID)
	}

	return r0
}

// NewISnowflakeIDGenerator creates a new instance of ISnowflakeIDGenerator. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewISnowflakeIDGenerator(t interface {
	mock.TestingT
	Cleanup(func())
}) *ISnowflakeIDGenerator {
	mock := &ISnowflakeIDGenerator{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
