// Code generated by mockery. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// ICronSimpleExample is an autogenerated mock type for the ICronSimpleExample type
type ICronSimpleExample struct {
	mock.Mock
}

// CronSpec provides a mock function with given fields:
func (_m *ICronSimpleExample) CronSpec() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// IsEnable provides a mock function with given fields:
func (_m *ICronSimpleExample) IsEnable() bool {
	ret := _m.Called()

	var r0 bool
	if rf, ok := ret.Get(0).(func() bool); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// Run provides a mock function with given fields:
func (_m *ICronSimpleExample) Run() {
	_m.Called()
}

// NewICronSimpleExample creates a new instance of ICronSimpleExample. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewICronSimpleExample(t interface {
	mock.TestingT
	Cleanup(func())
}) *ICronSimpleExample {
	mock := &ICronSimpleExample{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
