// Code generated by mockery v2.30.16. DO NOT EDIT.

package mocks

import (
	viper "github.com/spf13/viper"
	mock "github.com/stretchr/testify/mock"
)

// IConfig is an autogenerated mock type for the IConfig type
type IConfig struct {
	mock.Mock
}

// Get provides a mock function with given fields: v
func (_m *IConfig) Get(v *viper.Viper) interface{} {
	ret := _m.Called(v)

	var r0 interface{}
	if rf, ok := ret.Get(0).(func(*viper.Viper) interface{}); ok {
		r0 = rf(v)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(interface{})
		}
	}

	return r0
}

// SetDefault provides a mock function with given fields: v
func (_m *IConfig) SetDefault(v *viper.Viper) {
	_m.Called(v)
}

// NewIConfig creates a new instance of IConfig. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewIConfig(t interface {
	mock.TestingT
	Cleanup(func())
}) *IConfig {
	mock := &IConfig{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
